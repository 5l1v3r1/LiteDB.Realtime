trigger:
- master

jobs:
  - job: windows
    timeoutInMinutes: 20
    pool:
      vmImage: 'windows-latest'

    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'

    steps:

    - task: GitVersion@5
      inputs:
        runtime: 'full'
        preferBundledVersion: false
        updateAssemblyInfo: true

    - script: echo %Action%%BuildVersion%
      displayName: 'Set build version'
      env:
        Action: '##vso[build.updatebuildnumber]'
        BuildVersion: $(GitVersion.SemVer)

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        msbuildArgs: '/restore /t:Build /p:ContinuousIntegrationBuild=true /p:Deterministic=false'

    - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: 'test'
        publishTestResults: true
        arguments: '-c $(buildConfiguration) --no-build /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:ExcludeByAttribute="Obsolete,GeneratedCode,CompilerGenerated"'

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/*.cobertura.xml'

    - task: DotNetCoreCLI@2
      displayName: dotnet pack
      inputs:
        command: 'pack'
        packagesToPack: '**/*.csproj'
        nobuild: true
        includesymbols: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'artifacts'
        publishLocation: 'Container'